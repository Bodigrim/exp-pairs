import Data.Monoid
import ExpPairs.Process

pathes = [
	"ABABAABAAB",
	"AABAAAAAAAAABABABAAABAABABABAABAABAABAABAAB",
	"AABAAABAABABAAABABABABABABAABAABABAAABAAB",
	"AABAABAABABABABAAAAB",
	"AABABABAABABAAABABABABABABAABAABABAAABABAAB",
	"AABABABABAAABAAAABAAAABAAAABAAAABAAAABAAAAB",
	"AABABAABABABABABABAABAABABAAABABABABABABAAB",
	"AABABAAABABAAABABAABAAB",
	"AAAB",
	"AAABAAAABABABAABABABABABAAAB",
	"AAABAAABAABAAAABABAABAAB",
	"AAABAABABAAAB",
	"AAABAABAABAAAABABABABABABABAAAABABAAAABAAB",
	"AAABAABAAAAB",
	"ABABAABA",
	"A",
	"AABAAABAABABAAABABABABABABAABAABABAAABA",
	"AABAABAABABABABAAAABAAAAAAAAAAAAAAAAAAAA",
	"AABABABAABABAAABABABABABABAABAABABAAABA",
	"AABABABABAAABAAAABAAAABAAAABAAAABAAA",
	"AABABAABABABABABABAABAABABAAABABABABA",
	"AABABAAABABAAABABAABA",
	"AA",
	"AA",
	"AAABAAABAABAAAABABAABA",
	"AAABAABABAAABAAAAAAAAAAAAAAAAAAAAAAAAAAA",
	"AAABAABAABAAAABABABABABABABAAAABABAAAABA",
	"AAABAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
	"ABABAABA",
	"A",
	"AABAAABAABABAAABABABABABABAABAABABAAABA",
	"AABAABAABABABABAAAABAAAAAAAAAAAAAAAAAAAA",
	"AABABABAABABAAABABABABABABAABAABABAAABA",
	"AABABABABAAABAAAABAAAABAAAABAAAABAAA",
	"AABABAABABABABABABAABAABABAAABABABABA",
	"AABABAAABABAAABABAABA",
	"AA",
	"AAABAAAABABABAABABABABABAAABAAAAAAAAAAAA",
	"AAABAAABAABAAAABABAABA",
	"AAABAABABAAABAAAAAAAAAAAAAAAAAAAAAAAAAAA",
	"AAABAABAABAAAABABABABABABABAAAABABAAAABA",
	"AAABAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
	]

readPath "" = mempty
readPath "B" = baPath `mappend` mempty
readPath ('A':xs) = aPath `mappend` readPath xs
readPath ('B':'A':xs) = baPath `mappend` readPath xs

printer xs = do
	putStrLn xs
	putStrLn $ show $ readPath xs
	putStrLn ""

main =
	mapM_ printer pathes
